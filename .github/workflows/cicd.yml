name: CI/CD
on:
  push:
    branches: [ 'develop', 'main' ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '17'

      - name: make application.properties
        run: |
          mkdir -p ./src/main/resources
          cd ./src/main/resources
          touch ./application.properties
          echo "${{ secrets.APPLICATION }}" > ./application.properties

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Build with Gradle
        run: ./gradlew clean build

      - name: Docker build
        run: |
          docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} -p ${{ secrets.DOCKER_HUB_PASSWORD }}
          docker build -t plan-journey . 
          docker tag plan-journey ${{ secrets.DOCKER_NAME }}/plan-journey:${{ github.sha }}
          docker push ${{ secrets.DOCKER_NAME }}/plan-journey:${{ github.sha }}

      # cd
      # GET GITHUB ACTION IP
      - name: Get Github Actions IP
        id: ip
        uses: haythem/public-ip@v1.3

      # AWS IAM ACCESS
      - name: AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_SECURITY_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECURITY_SECRET_KEY }}
          aws-region: ap-northeast-2

      # APPEND Github Action IP to Security group
      - name: Append Github Action IP to Security group
        run: |
          aws ec2 authorize-security-group-ingress --group-id ${{ secrets.AWS_SG_ID }} --protocol tcp --port 22 --cidr ${{ steps.ip.outputs.ipv4 }}/32

      - name: Deploy to server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            docker pull ${{ secrets.DOCKER_NAME }}/plan-journey:${{ github.sha }}
            docker stop plan_journey_server || true
            docker rm plan_journey_server || true
            docker run -d --name plan_journey_server -p 8080:8080 ${{ secrets.DOCKER_NAME }}/plan-journey:${{ github.sha }}

      # Remove Github Action IP to Security group
      - name: Remove Github Actions IP to Security group
        run: |
          aws ec2 revoke-security-group-ingress --group-id ${{ secrets.AWS_SG_ID }} --protocol tcp --port 22 --cidr ${{ steps.ip.outputs.ipv4 }}/32
